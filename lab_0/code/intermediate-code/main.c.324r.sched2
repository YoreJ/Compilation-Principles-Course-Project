
;; Function main (main, funcdef_no=23, decl_uid=3375, cgraph_uid=24, symbol_order=23) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 13 count 10 (    1)


main

Dataflow summary:
def_info->table_size = 244, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,9u} r1={8d,3u} r2={7d,5u} r4={7d,4u} r5={6d,2u} r7={3d,20u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={16d,5u} r18={3d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 299{251d,48u,0e} in 35{32 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d18(1){ }d24(2){ }d31(4){ }d37(5){ }d38(7){ }d81(20){ }d85(21){ }d89(22){ }d93(23){ }d97(24){ }d101(25){ }d105(26){ }d109(27){ }d137(36){ }d141(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 0 )->[2]->( 3 8 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 7 [sp]
;; live  out 	 2 [cx] 7 [sp]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]

( 4 5 3 )->[5]->( 5 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 7 [sp]

( 4 5 8 )->[6]->( 7 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 6 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[8]->( 6 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 7 [sp]
;; live  out 	 1 [dx] 7 [sp]

( 6 )->[9]->( )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 15 to worklist
  Adding insn 4 to worklist
  Adding insn 80 to worklist
  Adding insn 72 to worklist
  Adding insn 86 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 37 to worklist
  Adding insn 111 to worklist
  Adding insn 49 to worklist
  Adding insn 121 to worklist
  Adding insn 45 to worklist
Finished finding needed instructions:
processing block 7 lr out =  0 [ax] 7 [sp]
  Adding insn 110 to worklist
  Adding insn 117 to worklist
processing block 9 lr out =  7 [sp]
processing block 6 lr out =  7 [sp]
  Adding insn 118 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 4 [si] 7 [sp]
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 104 to worklist
  Adding insn 25 to worklist
processing block 4 lr out =  0 [ax] 1 [dx] 4 [si] 7 [sp]
  Adding insn 71 to worklist
  Adding insn 70 to worklist
processing block 3 lr out =  0 [ax] 1 [dx] 4 [si] 7 [sp]
  Adding insn 123 to worklist
  Adding insn 64 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
processing block 8 lr out =  1 [dx] 7 [sp]
  Adding insn 7 to worklist
processing block 2 lr out =  2 [cx] 7 [sp]
  Adding insn 19 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 106 to worklist
  Adding insn 107 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 13 count 11 (  1.1)
;;   ======================================================
;;   -- basic block 2 from 107 to 20 -- after reload
;;   ======================================================

;;	  0--> b  0: i 107 {sp=sp-0x18;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i  12 di=`*.LC0'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  1--> b  0: i   4 {[sp+0x8]=unspec[[0x28]] 85;ax=0;clobber flags;}:hsw_decoder0
;;	  1--> b  0: i 106 si=sp+0x4                               :hsw_decodern,hsw_p1|hsw_p5
;;	  7--> b  0: i  15 ax=call [`*__isoc99_scanf']             :hsw_decoder0
;;	  7--> b  0: i  16 cx=[sp+0x4]                             :hsw_decodern,hsw_p23
;;	  9--> b  0: i  19 flags=cmp(cx,0)                         :hsw_decodern,hsw_p0156
;;	  9--> b  0: i  20 pc={(flags<=0)?L55:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 9
;;   new head = 107
;;   new tail = 20

;;   ======================================================
;;   -- basic block 3 from 5 to 80 -- after reload
;;   ======================================================

;;	  0--> b  0: i  64 si=zxn(cx+0x1)                          :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i 123 {flags=cmp(cx&0x1,0);cx=cx&0x1;}        :hsw_decodern,hsw_p0156
;;	  0--> b  0: i   5 ax=0x1                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i   6 dx=0x1                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  80 pc={(flags==0)?L27:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 1
;;   new head = 64
;;   new tail = 80

;;   ======================================================
;;   -- basic block 4 from 70 to 72 -- after reload
;;   ======================================================

;;	  0--> b  0: i  70 ax=0x2                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  71 flags=cmp(ax,si)                        :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  72 pc={(flags==0)?L30:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 1
;;   new head = 70
;;   new tail = 72

;;   ======================================================
;;   -- basic block 5 from 25 to 86 -- after reload
;;   ======================================================

;;	  0--> b  0: i  25 {dx=dx*ax;clobber flags;}               :hsw_decodern,hsw_p1
;;	  0--> b  0: i 104 cx=ax+0x1                               :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  84 {ax=ax+0x2;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  3--> b  0: i  83 {dx=dx*cx;clobber flags;}               :hsw_decodern,hsw_p1
;;	  3--> b  0: i  85 flags=cmp(ax,si)                        :hsw_decodern,hsw_p0156
;;	  3--> b  0: i  86 pc={(flags!=0)?L27:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 3
;;   new head = 25
;;   new tail = 86

;;   ======================================================
;;   -- basic block 6 from 33 to 44 -- after reload
;;   ======================================================

;;	  0--> b  0: i 118 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  33 si=`*.LC1'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  0--> b  0: i  35 di=0x2                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  37 ax=call [`__printf_chk']                :hsw_decoder0
;;	  2--> b  0: i  43 {flags=unspec[[sp+0x8],[0x28]] 86;clobber ax;}:hsw_decoder0
;;	  2--> b  0: i  44 pc={(flags!=0)?L120:pc}                 :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 118
;;   new tail = 44

;;   ======================================================
;;   -- basic block 7 from 117 to 111 -- after reload
;;   ======================================================

;;	  0--> b  0: i 117 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 110 {sp=sp+0x18;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i  49 use ax                                  :nothing
;;	  1--> b  0: i 111 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 1
;;   new head = 117
;;   new tail = 111

;;   ======================================================
;;   -- basic block 8 from 7 to 121 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7 dx=0x1                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i 121 pc=L30                                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 0
;;   new head = 7
;;   new tail = 121

;;   ======================================================
;;   -- basic block 9 from 45 to 45 -- after reload
;;   ======================================================

;;	  0--> b  0: i  45 call [`__stack_chk_fail']               :hsw_decoder0
;;	Ready list (final):  
;;   total time = 0
;;   new head = 45
;;   new tail = 45



starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,9u} r1={8d,3u} r2={7d,5u} r4={7d,4u} r5={6d,2u} r7={3d,20u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={16d,5u} r18={3d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 299{251d,48u,0e} in 35{32 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 107 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 107 2 108 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "main.c":2:12 1364 {pro_epilogue_adjust_stack_add_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (nil))))
(note 108 107 12 2 NOTE_INSN_PROLOGUE_END)
(insn 12 108 4 2 (set (reg/f:DI 5 di [91])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x77dc58e6c2d0 *.LC0>)) "main.c":5:5 82 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x77dc58e6c2d0 *.LC0>)
        (nil)))
(insn:TI 4 12 106 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 8 [0x8])) [2 D.3407+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [101])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":2:12 1382 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 106 4 15 2 (set (reg/f:DI 4 si [90])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 4 [0x4]))) "main.c":5:5 241 {*leadi}
     (nil))
(call_insn:TI 15 106 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x77dc59131600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":5:5 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x77dc59131600 scanf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 16 15 19 2 (set (reg:SI 2 cx [orig:86 num.0_13 ] [86])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [1 num+0 S4 A32])) "main.c":6:23 discrim 1 83 {*movsi_internal}
     (nil))
(insn:TI 19 16 20 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 2 cx [orig:86 num.0_13 ] [86])
            (const_int 0 [0]))) "main.c":6:23 discrim 1 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 55)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 22 21 23 3 NOTE_INSN_DELETED)
(note 23 22 65 3 NOTE_INSN_DELETED)
(note 65 23 64 3 NOTE_INSN_DELETED)
(insn:TI 64 65 123 3 (set (reg:DI 4 si [orig:87 _18 ] [87])
        (zero_extend:DI (plus:SI (reg:SI 2 cx [orig:86 num.0_13 ] [86])
                (const_int 1 [0x1])))) 241 {*leadi}
     (nil))
(insn 123 64 5 3 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 2 cx [orig:86 num.0_13 ] [86])
                        (const_int 1 [0x1]))
                    (const_int 0 [0])))
            (set (reg:SI 2 cx [orig:86 num.0_13 ] [86])
                (and:SI (reg:SI 2 cx [orig:86 num.0_13 ] [86])
                    (const_int 1 [0x1])))
        ]) 574 {*andsi_2}
     (expr_list:REG_UNUSED (reg:SI 2 cx [orig:86 num.0_13 ] [86])
        (nil)))
(insn 5 123 6 3 (set (reg:DI 0 ax [orig:83 ivtmp.10 ] [83])
        (const_int 1 [0x1])) "main.c":6:23 discrim 1 82 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 80 3 (set (reg/v:DI 1 dx [orig:85 factorial ] [85])
        (const_int 1 [0x1])) "main.c":4:24 82 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn:TI 80 6 73 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 536870918 (nil)))
 -> 27)
(note 73 80 70 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 70 73 71 4 (set (reg:DI 0 ax [orig:83 ivtmp.10 ] [83])
        (const_int 2 [0x2])) "main.c":6:23 discrim 1 82 {*movdi_internal}
     (nil))
(insn:TI 71 70 72 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:83 ivtmp.10 ] [83])
            (reg:DI 4 si [orig:87 _18 ] [87]))) "main.c":6:23 discrim 1 12 {*cmpdi_1}
     (nil))
(jump_insn 72 71 27 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 30)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 30)
(code_label 27 72 24 5 3 (nil) [2 uses])
(note 24 27 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 25 24 104 5 (parallel [
            (set (reg/v:DI 1 dx [orig:85 factorial ] [85])
                (mult:DI (reg/v:DI 1 dx [orig:85 factorial ] [85])
                    (reg:DI 0 ax [orig:83 ivtmp.10 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":7:19 470 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 104 25 84 5 (set (reg:DI 2 cx [100])
        (plus:DI (reg:DI 0 ax [orig:83 ivtmp.10 ] [83])
            (const_int 1 [0x1]))) "main.c":6:23 discrim 1 241 {*leadi}
     (nil))
(insn 84 104 83 5 (parallel [
            (set (reg:DI 0 ax [orig:83 ivtmp.10 ] [83])
                (plus:DI (reg:DI 0 ax [orig:83 ivtmp.10 ] [83])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":6:23 discrim 1 247 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 83 84 85 5 (parallel [
            (set (reg/v:DI 1 dx [orig:85 factorial ] [85])
                (mult:DI (reg/v:DI 1 dx [orig:85 factorial ] [85])
                    (reg:DI 2 cx [100])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":7:19 470 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [100])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 83 86 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:83 ivtmp.10 ] [83])
            (reg:DI 4 si [orig:87 _18 ] [87]))) "main.c":6:23 discrim 1 12 {*cmpdi_1}
     (nil))
(jump_insn 86 85 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 27)
(code_label 30 86 31 6 2 (nil) [2 uses])
(note 31 30 118 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 118 31 33 6 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 72 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 118 35 6 (set (reg/f:DI 4 si [93])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x77dc58e6c360 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x77dc58e6c360 *.LC1>)
        (nil)))
(insn 35 33 37 6 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(call_insn:TI 37 35 43 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x77dc59159800 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x77dc59159800 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn:TI 43 37 44 6 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [2 D.3407+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [102]))
        ]) "main.c":11:1 1387 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [102])
        (nil)))
(jump_insn 44 43 57 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 120)
            (pc))) "main.c":11:1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 429500 (nil)))
 -> 120)
(note 57 44 117 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 117 57 124 7 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":11:1 72 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 124 117 110 7 NOTE_INSN_EPILOGUE_BEG)
(insn/f 110 124 49 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "main.c":11:1 1364 {pro_epilogue_adjust_stack_add_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (nil))))
(insn 49 110 111 7 (use (reg/i:SI 0 ax)) "main.c":11:1 -1
     (nil))
(jump_insn:TI 111 49 114 7 (simple_return) "main.c":11:1 1026 {simple_return_internal}
     (nil)
 -> simple_return)
(barrier 114 111 55)
(code_label 55 114 54 8 5 (nil) [1 uses])
(note 54 55 7 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 7 54 121 8 (set (reg/v:DI 1 dx [orig:85 factorial ] [85])
        (const_int 1 [0x1])) "main.c":4:24 82 {*movdi_internal}
     (nil))
(jump_insn 121 7 122 8 (set (pc)
        (label_ref 30)) 996 {jump}
     (nil)
 -> 30)
(barrier 122 121 120)
(code_label 120 122 56 9 14 (nil) [1 uses])
(note 56 120 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 45 56 46 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x77dc58e5d900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":11:1 1002 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x77dc58e5d900 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 46 45 103)
(note 103 46 0 NOTE_INSN_DELETED)
