
;; Function printf (printf, funcdef_no=15, decl_uid=1743, cgraph_uid=16, symbol_order=15)

No signature change: function type has unhandled attribute nonnull.

Analyzing function body size: printf/15

IPA function summary for printf/15 always_inline inlinable
  global time:     15.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/25 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (2, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function main (main, funcdef_no=23, decl_uid=3375, cgraph_uid=24, symbol_order=23)


Analyzing function body size: main/23

IPA function summary for main/23 inlinable
  global time:     31.000000
  self size:       14
  global size:     0
  min size:       0
  self stack:      4
  global stack:    4
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    printf/15 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 3 stack: 0
       op0 is compile time invariant
    scanf/24 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
       op1 points to local or readonly memory

int main ()
{
  int i;
  long long unsigned int factorial;
  int num;
  long long unsigned int _1;
  int num.0_2;
  int _10;

  <bb 2> :
  factorial_5 = 1;
  scanf ("%d", &num);
  i_8 = 1;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long long unsigned int) i_4;
  factorial_12 = factorial_3 * _1;
  i_13 = i_4 + 1;

  <bb 4> :
  # factorial_3 = PHI <factorial_5(2), factorial_12(3)>
  # i_4 = PHI <i_8(2), i_13(3)>
  num.0_2 = num;
  if (i_4 <= num.0_2)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  printf ("%llu\n", factorial_3);
  _10 = 0;
  num ={v} {CLOBBER(eol)};
  return _10;

}


