
;; Function printf (printf, funcdef_no=15, decl_uid=1743, cgraph_uid=16, symbol_order=15)



modref analyzing 'printf/15' (ipa=0)
Analyzing flags of ssa name: __fmt_2(D)
  Analyzing stmt: _4 = __printf_chk (2, __fmt_2(D), __builtin_va_arg_pack ());
    Analyzing flags of ssa name: _4
      Analyzing stmt: return _4;
      current flags of _4 no_direct_clobber no_indirect_clobber no_direct_escape no_indirect_escape not_returned_indirectly no_direct_read no_indirect_read
    flags of ssa name _4 no_direct_clobber no_indirect_clobber no_direct_escape no_indirect_escape not_returned_indirectly no_direct_read no_indirect_read
  current flags of __fmt_2(D)
flags of ssa name __fmt_2(D)
Always executed bbbs (assuming return or EH): 2
 - Analyzing call:_4 = __printf_chk (2, __fmt_2(D), __builtin_va_arg_pack ());
 - Function availability <= AVAIL_INTERPOSABLE.
      Builtin with no fnspec: __printf_chk
 - modref done with result: tracked.
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [local count: 1073741824]:
  _4 = __printf_chk (2, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function main (main, funcdef_no=23, decl_uid=3375, cgraph_uid=24, symbol_order=23) (executed once)



modref analyzing 'main/23' (ipa=0)
Always executed bbbs (assuming return or EH): 2, 4, 5
 - Analyzing call:scanf ("%d", &num);
 - Function availability <= AVAIL_INTERPOSABLE.
      Builtin with no fnspec: scanf
 - modref done with result: tracked.
int main ()
{
  int i;
  long long unsigned int factorial;
  int num;
  long long unsigned int _1;
  int num.0_2;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &num);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  _1 = (long long unsigned int) i_4;
  factorial_12 = _1 * factorial_3;
  i_13 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # factorial_3 = PHI <1(2), factorial_12(3)>
  # i_4 = PHI <1(2), i_13(3)>
  num.0_2 = num;
  if (num.0_2 >= i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  # factorial_5 = PHI <factorial_3(4)>
  __printf_chk (2, "%llu\n", factorial_5);
  num ={v} {CLOBBER(eol)};
  return 0;

}


