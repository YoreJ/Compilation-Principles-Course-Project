
;; Function main (main, funcdef_no=23, decl_uid=3375, cgraph_uid=24, symbol_order=23) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 13 count 11 (  1.1)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={5d,1u} r2={4d} r4={6d,2u} r5={6d,2u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={17d,5u} r18={3d} r19={1d,13u,1e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r83={3d,5u} r85={4d,3u} r86={1d,2u} r87={1d,3u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 335{258d,76u,1e} in 39{36 regular + 3 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241
;;  reg->defs[] map:	0[0,6] 1[7,11] 2[12,15] 4[16,21] 5[22,27] 6[28,28] 7[29,29] 8[30,32] 9[33,35] 10[36,38] 11[39,41] 12[42,44] 13[45,47] 14[48,50] 15[51,53] 16[54,54] 17[55,71] 18[72,74] 19[75,75] 20[76,79] 21[80,83] 22[84,87] 23[88,91] 24[92,95] 25[96,99] 26[100,103] 27[104,107] 28[108,110] 29[111,113] 30[114,116] 31[117,119] 32[120,122] 33[123,125] 34[126,128] 35[129,131] 36[132,135] 37[136,139] 38[140,142] 39[143,145] 44[146,148] 45[149,151] 46[152,154] 47[155,157] 48[158,160] 49[161,163] 50[164,166] 51[167,169] 52[170,172] 53[173,175] 54[176,178] 55[179,181] 56[182,184] 57[185,187] 58[188,190] 59[191,193] 60[194,196] 61[197,199] 62[200,202] 63[203,205] 64[206,208] 65[209,211] 66[212,214] 67[215,217] 68[218,220] 69[221,223] 70[224,226] 71[227,229] 72[230,232] 73[233,235] 74[236,238] 75[239,241] 83[242,244] 85[245,248] 86[249,249] 87[250,250] 90[251,251] 91[252,252] 92[253,253] 93[254,254] 98[255,255] 99[256,256] 100[257,257] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d11(1){ }d15(2){ }d21(4){ }d27(5){ }d28(6){ }d29(7){ }d54(16){ }d75(19){ }d79(20){ }d83(21){ }d87(22){ }d91(23){ }d95(24){ }d99(25){ }d103(26){ }d107(27){ }d135(36){ }d139(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[6],1[11],2[15],4[21],5[27],6[28],7[29],16[54],19[75],20[79],21[83],22[87],23[91],24[95],25[99],26[103],27[107],36[135],37[139]
;; rd  kill	(72) 0[0,1,2,3,4,5,6],1[7,8,9,10,11],2[12,13,14,15],4[16,17,18,19,20,21],5[22,23,24,25,26,27],6[28],7[29],16[54],19[75],20[76,77,78,79],21[80,81,82,83],22[84,85,86,87],23[88,89,90,91],24[92,93,94,95],25[96,97,98,99],26[100,101,102,103],27[104,105,106,107],36[132,133,134,135],37[136,137,138,139]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[28],7[29],16[54],19[75]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(16){ d54(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 86 90 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 86 90 91
;; live  kill	 17 [flags]
;; rd  in  	(4) 6[28],7[29],16[54],19[75]
;; rd  gen 	(5) 0[4],17[69],86[249],90[251],91[252]
;; rd  kill	(27) 0[0,1,2,3,4,5,6],17[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],86[249],90[251],91[252]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; rd  out 	(5) 6[28],7[29],16[54],19[75],86[249]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

( 2 )->[3]->( 9 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(16){ d54(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; lr  def 	 17 [flags] 83 85 87 92 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86
;; live  gen 	 17 [flags] 83 85 87 92 98 99
;; live  kill	 17 [flags]
;; rd  in  	(5) 6[28],7[29],16[54],19[75],86[249]
;; rd  gen 	(7) 17[60],83[244],85[248],87[250],92[253],98[255],99[256]
;; rd  kill	(28) 17[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],83[242,243,244],85[245,246,247,248],87[250],92[253],98[255],99[256]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; rd  out 	(7) 6[28],7[29],16[54],19[75],83[244],85[248],87[250]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

( 9 4 3 )->[4]->( 4 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(16){ d54(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; lr  def 	 17 [flags] 83 85 100
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; live  gen 	 17 [flags] 83 85 100
;; live  kill	 17 [flags]
;; rd  in  	(12) 6[28],7[29],16[54],17[59],19[75],83[242,243,244],85[245,248],87[250],100[257]
;; rd  gen 	(4) 17[59],83[242],85[245],100[257]
;; rd  kill	(25) 17[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],83[242,243,244],85[245,246,247,248],100[257]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; rd  out 	(7) 6[28],7[29],16[54],19[75],83[242],85[245],87[250]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

( 2 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(16){ d54(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 85
;; live  kill	
;; rd  in  	(5) 6[28],7[29],16[54],19[75],86[249]
;; rd  gen 	(1) 85[246]
;; rd  kill	(4) 85[245,246,247,248]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; rd  out 	(5) 6[28],7[29],16[54],19[75],85[246]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

( 5 9 4 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(16){ d54(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 93
;; live  kill	
;; rd  in  	(10) 6[28],7[29],16[54],19[75],83[242,243],85[245,246,248],87[250]
;; rd  gen 	(3) 0[2],17[64],93[254]
;; rd  kill	(25) 0[0,1,2,3,4,5,6],17[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],93[254]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(4) 6[28],7[29],16[54],19[75]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

( 6 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(16){ d54(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[28],7[29],16[54],19[75]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(3) 7[29],16[54],19[75]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

( 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(16){ d54(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(4) 6[28],7[29],16[54],19[75]
;; rd  gen 	(1) 0[0]
;; rd  kill	(7) 0[0,1,2,3,4,5,6]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; rd  out 	(5) 0[0],6[28],7[29],16[54],19[75]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

( 3 )->[9]->( 4 6 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(16){ d54(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 87
;; lr  def 	 17 [flags] 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85 87
;; live  gen 	 17 [flags] 83
;; live  kill	
;; rd  in  	(7) 6[28],7[29],16[54],19[75],83[244],85[248],87[250]
;; rd  gen 	(2) 17[61],83[243]
;; rd  kill	(20) 17[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],83[242,243,244]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 85 87
;; rd  out 	(7) 6[28],7[29],16[54],19[75],83[243],85[248],87[250]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 16 { d54(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ d0(bb 8 insn 48) }u-1(6){ d28(bb 0 insn -1) }u-1(7){ d29(bb 0 insn -1) }u-1(19){ d75(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[28],7[29],16[54],19[75]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 8 insn 48) }
;;   reg 6 { d28(bb 0 insn -1) }
;;   reg 7 { d29(bb 0 insn -1) }
;;   reg 19 { d75(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 15 to worklist
  Adding insn 4 to worklist
  Adding insn 80 to worklist
  Adding insn 86 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 37 to worklist
  Adding insn 45 to worklist
  Adding insn 49 to worklist
  Adding insn 72 to worklist
Finished finding needed instructions:
  Adding insn 48 to worklist
Processing use of (reg 17 flags) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 83 [ ivtmp.10 ]) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 87 [ _18 ]) in insn 71:
  Adding insn 23 to worklist
Processing use of (reg 92) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 86 [ num.0_13 ]) in insn 22:
  Adding insn 16 to worklist
Processing use of (reg 19 frame) in insn 16:
Processing use of (reg 0 ax) in insn 49:
Processing use of (reg 7 sp) in insn 45:
Processing use of (reg 7 sp) in insn 37:
Processing use of (reg 0 ax) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 1 dx) in insn 37:
  Adding insn 32 to worklist
Processing use of (reg 4 si) in insn 37:
  Adding insn 34 to worklist
Processing use of (reg 5 di) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 93) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 85 [ factorial ]) in insn 32:
  Adding insn 6 to worklist
  Adding insn 7 to worklist
  Adding insn 83 to worklist
Processing use of (reg 85 [ factorial ]) in insn 83:
  Adding insn 25 to worklist
Processing use of (reg 100) in insn 83:
  Adding insn 91 to worklist
Processing use of (reg 83 [ ivtmp.10 ]) in insn 91:
  Adding insn 5 to worklist
  Adding insn 84 to worklist
Processing use of (reg 83 [ ivtmp.10 ]) in insn 84:
Processing use of (reg 83 [ ivtmp.10 ]) in insn 25:
Processing use of (reg 85 [ factorial ]) in insn 25:
Processing use of (reg 19 frame) in insn 43:
Processing use of (reg 17 flags) in insn 44:
Processing use of (reg 17 flags) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 83 [ ivtmp.10 ]) in insn 85:
Processing use of (reg 87 [ _18 ]) in insn 85:
Processing use of (reg 17 flags) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 99) in insn 79:
  Adding insn 65 to worklist
Processing use of (reg 98) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 87 [ _18 ]) in insn 64:
Processing use of (reg 19 frame) in insn 4:
Processing use of (reg 7 sp) in insn 15:
Processing use of (reg 0 ax) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 4 si) in insn 15:
  Adding insn 11 to worklist
Processing use of (reg 5 di) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 91) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 90) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 19 frame) in insn 10:
Processing use of (reg 17 flags) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 86 [ num.0_13 ]) in insn 19:
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={5d,1u} r2={4d} r4={6d,2u} r5={6d,2u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={17d,5u} r18={3d} r19={1d,13u,1e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r83={3d,5u} r85={4d,3u} r86={1d,2u} r87={1d,3u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 335{258d,76u,1e} in 39{36 regular + 3 call} insns.
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.3407+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":2:12 1382 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 4 11 2 (parallel [
            (set (reg/f:DI 90)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":5:5 247 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 90)) "main.c":5:5 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 91)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x77dc58e6c2d0 *.LC0>)) "main.c":5:5 82 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 91)) "main.c":5:5 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x77dc58e6c2d0 *.LC0>)
            (nil))))
(insn 14 13 15 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":5:5 85 {*movqi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x77dc59131600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":5:5 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x77dc59131600 scanf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 16 15 19 2 (set (reg:SI 86 [ num.0_13 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 num+0 S4 A32])) "main.c":6:23 discrim 1 83 {*movsi_internal}
     (nil))
(insn 19 16 20 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 86 [ num.0_13 ])
            (const_int 0 [0]))) "main.c":6:23 discrim 1 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 55)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg:SI 86 [ num.0_13 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 246 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ num.0_13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 5 3 (set (reg:DI 87 [ _18 ])
        (zero_extend:DI (reg:SI 92))) 151 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 5 23 6 3 (set (reg:DI 83 [ ivtmp.10 ])
        (const_int 1 [0x1])) "main.c":6:23 discrim 1 82 {*movdi_internal}
     (nil))
(insn 6 5 64 3 (set (reg/v:DI 85 [ factorial ])
        (const_int 1 [0x1])) "main.c":4:24 82 {*movdi_internal}
     (nil))
(insn 64 6 65 3 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg:DI 87 [ _18 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 247 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 65 64 79 3 (parallel [
            (set (reg:DI 99)
                (and:DI (reg:DI 98)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 65 80 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 99)
            (const_int 0 [0]))) -1
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(jump_insn 80 79 27 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 536870918 (nil)))
 -> 27)
      ; pc falls through to BB 9
(code_label 27 80 24 4 3 (nil) [3 uses])
(note 24 27 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 91 4 (parallel [
            (set (reg/v:DI 85 [ factorial ])
                (mult:DI (reg/v:DI 85 [ factorial ])
                    (reg:DI 83 [ ivtmp.10 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":7:19 470 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 25 83 4 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 83 [ ivtmp.10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":6:23 discrim 1 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 83 91 84 4 (parallel [
            (set (reg/v:DI 85 [ factorial ])
                (mult:DI (reg/v:DI 85 [ factorial ])
                    (reg:DI 100)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":7:19 470 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 84 83 85 4 (parallel [
            (set (reg:DI 83 [ ivtmp.10 ])
                (plus:DI (reg:DI 83 [ ivtmp.10 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":6:23 discrim 1 247 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 83 [ ivtmp.10 ])
            (reg:DI 87 [ _18 ]))) "main.c":6:23 discrim 1 12 {*cmpdi_1}
     (nil))
(jump_insn 86 85 55 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 27)
      ; pc falls through to BB 6
(code_label 55 86 54 5 5 (nil) [1 uses])
(note 54 55 7 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 7 54 30 5 (set (reg/v:DI 85 [ factorial ])
        (const_int 1 [0x1])) "main.c":4:24 82 {*movdi_internal}
     (nil))
(code_label 30 7 31 6 2 (nil) [0 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:DI 1 dx)
        (reg/v:DI 85 [ factorial ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 85 [ factorial ])
        (nil)))
(insn 33 32 34 6 (set (reg/f:DI 93)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x77dc58e6c360 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:DI 4 si)
        (reg/f:DI 93)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x77dc58e6c360 *.LC1>)
            (nil))))
(insn 35 34 36 6 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 85 {*movqi_internal}
     (nil))
(call_insn 37 36 43 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x77dc59159800 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x77dc59159800 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 43 37 44 6 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.3407+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "main.c":11:1 1387 {stack_protect_test_1_di}
     (nil))
(jump_insn 44 43 56 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "main.c":11:1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 47)
(note 56 44 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 45 56 47 7 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x77dc58e5d900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":11:1 1002 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x77dc58e5d900 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(code_label 47 45 57 8 4 (nil) [1 uses])
(note 57 47 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 57 49 8 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "main.c":11:1 83 {*movsi_internal}
     (nil))
(insn 49 48 73 8 (use (reg/i:SI 0 ax)) "main.c":11:1 -1
     (nil))
      ; pc falls through to BB 1
(note 73 49 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 73 71 9 (set (reg:DI 83 [ ivtmp.10 ])
        (const_int 2 [0x2])) "main.c":6:23 discrim 1 82 {*movdi_internal}
     (nil))
(insn 71 70 72 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 83 [ ivtmp.10 ])
            (reg:DI 87 [ _18 ]))) "main.c":6:23 discrim 1 12 {*cmpdi_1}
     (nil))
(jump_insn 72 71 0 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 27)
