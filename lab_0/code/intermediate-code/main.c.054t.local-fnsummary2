
;; Function printf (printf, funcdef_no=15, decl_uid=1743, cgraph_uid=16, symbol_order=15)

No signature change: function type has unhandled attribute nonnull.

Analyzing function body size: printf/15

IPA function summary for printf/15 always_inline inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/25 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [local count: 1073741824]:
  _4 = __printf_chk (2, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function main (main, funcdef_no=23, decl_uid=3375, cgraph_uid=24, symbol_order=23) (executed once)


Analyzing function body size: main/23

IPA function summary for main/23 inlinable
  global time:     70.454546
  self size:       15
  global size:     16
  min size:       0
  self stack:      4
  global stack:    4
    size:5.000000, time:43.454546
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/25 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    scanf/24 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
       op1 points to local or readonly memory

int main ()
{
  int i;
  long long unsigned int factorial;
  int num;
  long long unsigned int _1;
  int num.0_2;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &num);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  _1 = (long long unsigned int) i_4;
  factorial_9 = _1 * factorial_3;
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # factorial_3 = PHI <1(2), factorial_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  num.0_2 = num;
  if (num.0_2 >= i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  # factorial_5 = PHI <factorial_3(4)>
  __printf_chk (2, "%llu\n", factorial_5);
  num ={v} {CLOBBER(eol)};
  return 0;

}


