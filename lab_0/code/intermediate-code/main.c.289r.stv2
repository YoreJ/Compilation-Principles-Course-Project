
;; Function main (main, funcdef_no=23, decl_uid=3375, cgraph_uid=24, symbol_order=23) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 13 count 10 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 13 count 11 (  1.1)
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 13 count 11 (  1.1)
Searching for mode conversion candidates...
  insn 16 is marked as a SImode candidate
  insn 5 is marked as a DImode candidate
  insn 6 is marked as a DImode candidate
  insn 91 is marked as a DImode candidate
  insn 84 is marked as a DImode candidate
  insn 7 is marked as a DImode candidate
  insn 70 is marked as a DImode candidate
Created a new instruction chain #1
Building chain #1...
  Adding insn 16 to chain #1
  r86 use in insn 79 isn't convertible
  r86 use in insn 64 isn't convertible
  r86 use in insn 19 isn't convertible
  Mark r86 def in insn 16 as requiring both modes in chain #1
Collected chain #1...
  insns: 16
  defs to convert: r86
Computing gain for chain #1...
  Instruction conversion gain: 0
  Registers conversion cost: 6
  Total gain: -6
Chain #1 conversion is not profitable
Created a new instruction chain #2
Building chain #2...
  Adding insn 5 to chain #2
  Adding insn 84 into chain's #2 queue
  Adding insn 91 into chain's #2 queue
  r83 use in insn 25 isn't convertible
  Mark r83 def in insn 5 as requiring both modes in chain #2
  Adding insn 84 to chain #2
  r83 use in insn 85 isn't convertible
  r83 use in insn 25 isn't convertible
  Adding insn 70 into chain's #2 queue
  Adding insn 70 to chain #2
  r83 use in insn 71 isn't convertible
  r83 use in insn 25 isn't convertible
  Adding insn 91 to chain #2
  r100 use in insn 83 isn't convertible
  Mark r100 def in insn 91 as requiring both modes in chain #2
Collected chain #2...
  insns: 5, 70, 84, 91
  defs to convert: r83, r100
Computing gain for chain #2...
  Instruction gain -2 for     5: r83:DI=0x1
  Instruction gain -2 for    70: r83:DI=0x2
  Instruction gain -6 for    84: {r83:DI=r83:DI+0x2;clobber flags:CC;}
      REG_UNUSED flags:CC
  Instruction gain -6 for    91: {r100:DI=r83:DI+0x1;clobber flags:CC;}
      REG_UNUSED flags:CC
  Instruction conversion gain: -16
  Registers conversion cost: 12
  Total gain: -28
Chain #2 conversion is not profitable
Created a new instruction chain #3
Building chain #3...
  Adding insn 6 to chain #3
  r85 use in insn 32 isn't convertible
  r85 use in insn 25 isn't convertible
  Mark r85 def in insn 6 as requiring both modes in chain #3
Collected chain #3...
  insns: 6
  defs to convert: r85
Computing gain for chain #3...
  Instruction gain -2 for     6: r85:DI=0x1
  Instruction conversion gain: -2
  Registers conversion cost: 6
  Total gain: -8
Chain #3 conversion is not profitable
Created a new instruction chain #4
Building chain #4...
  Adding insn 7 to chain #4
  r85 use in insn 32 isn't convertible
  Mark r85 def in insn 7 as requiring both modes in chain #4
Collected chain #4...
  insns: 7
  defs to convert: r85
Computing gain for chain #4...
  Instruction gain -2 for     7: r85:DI=0x1
  Instruction conversion gain: -2
  Registers conversion cost: 6
  Total gain: -8
Chain #4 conversion is not profitable
Total insns converted: 0
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={5d,1u} r2={4d} r4={6d,2u} r5={6d,2u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={14d,5u} r18={3d} r19={1d,13u,1e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r83={3d,5u} r85={4d,3u} r86={1d,3u} r87={1d,2u} r90={1d,1u} r91={1d,1u} r93={1d,1u} r100={1d,1u} 
;;    total ref usage 326{252d,73u,1e} in 36{33 regular + 3 call} insns.
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.3407+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":2:12 1382 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 4 11 2 (parallel [
            (set (reg/f:DI 90)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":5:5 247 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 90)) "main.c":5:5 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 91)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x77dc58e6c2d0 *.LC0>)) "main.c":5:5 82 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 91)) "main.c":5:5 -1
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x77dc58e6c2d0 *.LC0>)
            (nil))))
(insn 14 13 15 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":5:5 85 {*movqi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x77dc59131600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":5:5 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x77dc59131600 scanf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 16 15 19 2 (set (reg:SI 86 [ num.0_13 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 num+0 S4 A32])) "main.c":6:23 discrim 1 83 {*movsi_internal}
     (nil))
(insn 19 16 20 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 86 [ num.0_13 ])
            (const_int 0 [0]))) "main.c":6:23 discrim 1 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 55)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 22 21 23 3 NOTE_INSN_DELETED)
(note 23 22 5 3 NOTE_INSN_DELETED)
(insn 5 23 6 3 (set (reg:DI 83 [ ivtmp.10 ])
        (const_int 1 [0x1])) "main.c":6:23 discrim 1 82 {*movdi_internal}
     (nil))
(insn 6 5 64 3 (set (reg/v:DI 85 [ factorial ])
        (const_int 1 [0x1])) "main.c":4:24 82 {*movdi_internal}
     (nil))
(insn 64 6 65 3 (set (reg:DI 87 [ _18 ])
        (zero_extend:DI (plus:SI (reg:SI 86 [ num.0_13 ])
                (const_int 1 [0x1])))) 241 {*leadi}
     (nil))
(note 65 64 79 3 NOTE_INSN_DELETED)
(insn 79 65 80 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (zero_extract:DI (reg:SI 86 [ num.0_13 ])
                (const_int 1 [0x1])
                (const_int 0 [0]))
            (const_int 0 [0]))) 552 {*testqi_ext_3}
     (expr_list:REG_DEAD (reg:SI 86 [ num.0_13 ])
        (nil)))
(jump_insn 80 79 27 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 536870918 (nil)))
 -> 27)
      ; pc falls through to BB 9
(code_label 27 80 24 4 3 (nil) [3 uses])
(note 24 27 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 91 4 (parallel [
            (set (reg/v:DI 85 [ factorial ])
                (mult:DI (reg/v:DI 85 [ factorial ])
                    (reg:DI 83 [ ivtmp.10 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":7:19 470 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 25 83 4 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 83 [ ivtmp.10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":6:23 discrim 1 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 83 91 84 4 (parallel [
            (set (reg/v:DI 85 [ factorial ])
                (mult:DI (reg/v:DI 85 [ factorial ])
                    (reg:DI 100)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":7:19 470 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 84 83 85 4 (parallel [
            (set (reg:DI 83 [ ivtmp.10 ])
                (plus:DI (reg:DI 83 [ ivtmp.10 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":6:23 discrim 1 247 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 83 [ ivtmp.10 ])
            (reg:DI 87 [ _18 ]))) "main.c":6:23 discrim 1 12 {*cmpdi_1}
     (nil))
(jump_insn 86 85 55 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 27)
      ; pc falls through to BB 6
(code_label 55 86 54 5 5 (nil) [1 uses])
(note 54 55 7 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 7 54 30 5 (set (reg/v:DI 85 [ factorial ])
        (const_int 1 [0x1])) "main.c":4:24 82 {*movdi_internal}
     (nil))
(code_label 30 7 31 6 2 (nil) [0 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:DI 1 dx)
        (reg/v:DI 85 [ factorial ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 85 [ factorial ])
        (nil)))
(insn 33 32 34 6 (set (reg/f:DI 93)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x77dc58e6c360 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:DI 4 si)
        (reg/f:DI 93)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 -1
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x77dc58e6c360 *.LC1>)
            (nil))))
(insn 35 34 36 6 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 85 {*movqi_internal}
     (nil))
(call_insn 37 36 43 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x77dc59159800 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x77dc59159800 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 43 37 44 6 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.3407+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "main.c":11:1 1387 {stack_protect_test_1_di}
     (nil))
(jump_insn 44 43 56 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "main.c":11:1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 47)
(note 56 44 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 45 56 47 7 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x77dc58e5d900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":11:1 1002 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x77dc58e5d900 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(code_label 47 45 57 8 4 (nil) [1 uses])
(note 57 47 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 57 49 8 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "main.c":11:1 83 {*movsi_internal}
     (nil))
(insn 49 48 73 8 (use (reg/i:SI 0 ax)) "main.c":11:1 -1
     (nil))
      ; pc falls through to BB 1
(note 73 49 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 73 71 9 (set (reg:DI 83 [ ivtmp.10 ])
        (const_int 2 [0x2])) "main.c":6:23 discrim 1 82 {*movdi_internal}
     (nil))
(insn 71 70 72 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 83 [ ivtmp.10 ])
            (reg:DI 87 [ _18 ]))) "main.c":6:23 discrim 1 12 {*cmpdi_1}
     (nil))
(jump_insn 72 71 0 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "main.c":6:23 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 27)
